{"version":3,"file":"static/js/508.2b74c40b.chunk.js","mappings":"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","sources":["components/phonebook/container.jsx","components/phonebook/contactForm/ContactFormStyled.jsx","redux/selectors.js","components/phonebook/contactForm/ContactForm.jsx","components/phonebook/contactList/ContactListStyled.jsx","components/phonebook/contactList/ContactList.jsx","components/phonebook/filter/Filter.styled.js","components/phonebook/filter/Filer.jsx","components/phonebook/Loader/Loader.style.js","components/phonebook/Loader/Loader.jsx","pages/contacts/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  border: 1px solid black;\n  width: 400px;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  border-radius: 10px;\n  margin-left: auto;\n  margin-right: auto;\n  text-align: center;\n`;\n","import styled from 'styled-components';\n\nexport const FormContainer = styled.form`\n  // border: 1px solid black;\n  width: 320px;\n  display: flex;\n  align-items: flex-start;\n  flex-direction: column;\n  padding: 10px 10px;\n  margin: auto;\n`;\n\nexport const InputForm = styled.input`\n  margin: 5px 0 15px;\n`;\nexport const Button = styled.button`\n  width: 40%;\n  font-family: inherit;\n  font-size: 100%;\n  line-height: 1.15;\n  border-radius: 5px;\n  border: none;\n  border: 1px solid black;\n  cursor: pointer;\n  background-color: grey;\n  :hover,\n  :focus {\n    background-color: blue;\n  }\n`;\n","export const getFiler = state => state.filter;\nexport const getContacts = state => state.contacts.items;\nexport const getLoading = state => state.contacts.isLoading;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FormContainer, InputForm, Button } from './ContactFormStyled';\nimport { useState } from 'react';\nimport { getContacts } from 'redux/selectors';\nimport { notifyContactsRejected } from 'components/services';\nimport { addNewContact } from 'redux/operations';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setPhoneNumber] = useState('');\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    name === 'name' ? setName(value) : setPhoneNumber(value);\n  };\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const contact = {\n      name,\n      number,\n    };\n    if (\n      contacts.some(\n        contact => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      notifyContactsRejected(name);\n    } else {\n      dispatch(addNewContact(contact));\n    }\n    setName('');\n    setPhoneNumber('');\n  };\n\n  return (\n    <FormContainer onSubmit={handleSubmit}>\n      <p>Name</p>\n      <InputForm\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        value={name}\n        onChange={handleChange}\n        required\n      />\n      <p>Number</p>\n      <InputForm\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        value={number}\n        onChange={handleChange}\n        required\n      />\n      <Button type=\"submit\">Add contact</Button>\n    </FormContainer>\n  );\n};\n","import styled from 'styled-components';\nexport const List = styled.li`\n  display: inline-flex;\n  justify-content: space-between;\n  min-width: 70%;\n  :not(:last-child) {\n    margin-bottom: 10px;\n  }\n`;\nexport const ButtonDelete = styled.button`\n  line-height: 1.15;\n  border-radius: 5px;\n  border: none;\n  border: 1px solid black;\n  cursor: pointer;\n  background-color: #cc9797;\n  :hover,\n  :focus {\n    background-color: red;\n  }\n`;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/operations';\nimport { getContacts, getFiler } from 'redux/selectors';\n\nimport { ButtonDelete, List } from './ContactListStyled';\n\nexport const ContactList = () => {\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFiler);\n  const dispatch = useDispatch();\n  const deleteSelectedContact = contactID => dispatch(deleteContact(contactID));\n  const visibleContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(filter.toLowerCase())\n  );\n  return (\n    <ul>\n      {visibleContacts.map(contact => (\n        <List key={contact.id}>\n          {contact.name}: {contact.number}\n          <ButtonDelete\n            type=\"button\"\n            onClick={() => deleteSelectedContact(contact.id)}\n          >\n            Delete\n          </ButtonDelete>\n        </List>\n      ))}\n    </ul>\n  );\n};\n","import styled from 'styled-components';\nexport const Input = styled.input`\n  height: 20px;\n  width: 250px;\n  padding: 5px 10px;\n  font-size: 14px;\n  color: rgb(0, 0, 0);\n  outline: none;\n  border: 1px solid rgb(0, 0, 0);\n  border-radius: 3px;\n`;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { onFilter } from 'redux/filterSlice';\nimport { getFiler } from 'redux/selectors';\nimport { Input } from './Filter.styled';\n\nconst Filter = () => {\n  const filter = useSelector(getFiler);\n  const dispatch = useDispatch();\n  const handleFilter = e => {\n    dispatch(onFilter(e.currentTarget.value));\n  };\n  return (\n    <div className=\"FilterWrapper\">\n      Find contact by name\n      <form action=\"\">\n        <label htmlFor=\"\">\n          <Input\n            type=\"text\"\n            name=\"filter\"\n            value={filter}\n            onChange={handleFilter}\n          />\n        </label>\n      </form>\n    </div>\n  );\n};\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const Test = styled.div`\n  display: flex;\n  justify-content: space-around;\n`;\n","import React from 'react';\nimport { ThreeDots } from 'react-loader-spinner';\nimport { Test } from './Loader.style';\n\nexport const Loader = () => {\n  return (\n    <Test>\n      <ThreeDots type=\"ThreeDots\" color=\"#00BFFF\" height={80} width={80} />\n    </Test>\n  );\n};\n","import { ContactForm } from 'components/phonebook/contactForm/ContactForm';\nimport { ContactList } from 'components/phonebook/contactList/ContactList';\nimport { Container } from 'components/phonebook/container';\nimport Filter from 'components/phonebook/filter/Filer';\nimport { Loader } from 'components/phonebook/Loader/Loader';\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ToastContainer } from 'react-toastify';\nimport { fetchContacts } from 'redux/operations';\nimport { getContacts, getLoading } from 'redux/selectors';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  const contacts = useSelector(getContacts);\n  const isLoading = useSelector(getLoading);\n\n  return (\n    <>\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={2000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        draggable\n        pauseOnHover\n        theme=\"light\"\n      />\n      <Container>\n        <h2>Phonebook</h2>\n        <ContactForm />\n        <h2>Contacts</h2>\n        {isLoading && <Loader />}\n        {contacts.length > 1 && <Filter />}\n        {contacts.length > 0 ? (\n          <ContactList />\n        ) : (\n          <p\n            style={{\n              marginBottom: '25px',\n              lineHeight: '1.15',\n            }}\n          >\n            You have no contacts saved\n          </p>\n        )}\n      </Container>\n    </>\n  );\n};\nexport default ContactsPage;\n"],"names":["Container","styled","FormContainer","InputForm","Button","getFiler","state","filter","getContacts","contacts","items","getLoading","isLoading","ContactForm","useState","name","setName","number","setPhoneNumber","handleChange","e","currentTarget","value","useSelector","dispatch","useDispatch","onSubmit","preventDefault","contact","some","toLowerCase","notifyContactsRejected","addNewContact","type","pattern","title","onChange","required","List","ButtonDelete","ContactList","visibleContacts","includes","map","onClick","contactID","id","deleteContact","Input","className","action","htmlFor","onFilter","Test","Loader","color","height","width","useEffect","fetchContacts","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","theme","length","style","marginBottom","lineHeight"],"sourceRoot":""}